---
title: "EDA for Question 2: Detecting True Demand Growth (Python)"
format: html
execute:
  echo: true
engine: jupyter
---

## Introduction

This document presents an Exploratory Data Analysis (EDA) for Question 2 of the case study. The objective is to estimate the true year-over-year demand growth in Germany by accounting for the effect of behind-the-meter (BTM) solar generation.

## Setup

Loading the necessary libraries for the analysis.

```{python}
#| label: setup
import pandas as pd
import plotly.express as px
from skimpy import skim
from statsmodels.tsa.stattools import grangercausalitytests
import numpy as np
```

## Data Loading and Preparation

We load the datasets relevant to Question 2:
- `germany_electricity_demand_observation_q2.csv`: Observed electricity demand.
- `germany_solar_observation_q2.csv`: Grid-scale solar power generation.
- `germany_atm_features_q2.csv`: Meteorological data.

These are merged into a single dataframe.

```{python}
#| label: load-data
demand_q2 = pd.read_csv("../data/germany_electricity_demand_observation_q2.csv", parse_dates=['DateTime'])
solar_q2 = pd.read_.csv("../data/germany_solar_observation_q2.csv", parse_dates=['DateTime'])
atm_q2 = pd.read_csv("../data/germany_atm_features_q2.csv", parse_dates=['DateTime'])

data_q2 = pd.merge(demand_q2, solar_q2, on="DateTime")
data_q2 = pd.merge(data_q2, atm_q2, on="DateTime")
```

## Initial Data Exploration

Let's get a summary of the combined dataset.

```{python}
#| label: skim-data
skim(data_q2)
```

## Time Series Visualization

Visualizing the demand and solar generation data to identify trends and patterns.

### Electricity Demand

```{python}
#| label: plot-demand
fig = px.line(data_q2, x='DateTime', y='demand', title='Observed Electricity Demand over Time')
fig.show()
```

The demand shows daily and weekly cycles, as well as seasonal variations. There appears to be a dip in demand during midday, which might be caused by BTM solar generation.

### Grid-Scale Solar Power

```{python}
#| label: plot-power
fig = px.line(data_q2, x='DateTime', y='power', title='Grid-Scale Solar Power Generation over Time')
fig.show()
```

This plot shows the grid-scale solar generation, which does not account for rooftop solar installations.

## Correlation Analysis

A correlation matrix will help us understand the relationships between the different variables in the context of demand.

```{python}
#| label: correlation-matrix
numeric_vars = data_q2.select_dtypes(include='number')
cor_matrix = numeric_vars.corr()

fig = px.imshow(cor_matrix, title='Correlation Matrix of Demand, Solar, and Weather')
fig.show()
```

The correlation matrix can reveal how weather variables impact both demand and solar generation, providing clues to isolate the effect of BTM solar.

## Causal Correlation Analysis

To further investigate the relationship between solar generation and demand, we can use a Granger causality test. This test helps determine if one time series is useful in forecasting another.

### Granger Causality Test

We'll test if `surface_solar_radiation_downwards` Granger-causes `demand`. We'll use a lag of 6 hours.

```{python}
#| label: granger-test
# Handle missing values
data_q2_filled = data_q2[['demand', 'surface_solar_radiation_downwards']].ffill()

# Perform the Granger causality test
granger_result = grangercausalitytests(data_q2_filled, [6], verbose=True)
```

### Interpretation

The null hypothesis of the Granger causality test is that the lagged values of the predictor variable do not add any predictive power to the model for the dependent variable. If the p-value is statistically significant (typically < 0.05), we can reject the null hypothesis and conclude that there is evidence of Granger causality.
